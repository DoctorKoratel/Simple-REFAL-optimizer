$EXTERN Error;

$LABEL S, E, T, Atom, OpenBr, ClseBr, Brackets;

$FORWARD ParseName;

Spar {
	(e.S) (#OpenBr ) e.T = <Spar ((e.S)) e.T>;
	((e.S) e.1) (#ClseBr ) e.T = <Spar (e.S (#Brackets e.1)) e.T>;
	('L' e.S) (#ClseBr ) e.T = <Error 'Error while parsing brackets'>;
	(e.S) (s.X e.attr) e.T = <Spar (e.S (s.X e.attr)) e.T>;
	('L' e.S) = e.S;
	(e.S) = <Error 'Error while parsing brackets'>;
}

MakeBrackets {
	e.1 = <Spar ('L') e.1>;
}

PatternLexer {
	'(' e.tail = (#OpenBr ) <PatternLexer e.tail>;
	')' e.tail = (#ClseBr ) <PatternLexer e.tail>;
	
	/* Variables */
	's.' e.tail = <ParseName #S e.tail ()>;
	't.' e.tail = <ParseName #T e.tail ()>;
	'e.' e.tail = <ParseName #E e.tail ()>;
	
	/* Skip WS */
	' ' e.tail = <PatternLexer e.tail>; 
	'\t' e.tail = <PatternLexer e.tail>; 
	'\n' e.tail = <PatternLexer e.tail>; 
	
	s.Atom e.tail = (#Atom s.Atom) <PatternLexer e.tail>;
	
	 = ;
}

ParseName {
	s.VarType '(' e.tail (e.name) = 
		(s.VarType (e.name) ()) <PatternLexer '(' e.tail>;
	s.VarType ')' e.tail (e.name) = 
		(s.VarType (e.name) ()) <PatternLexer ')' e.tail>;
	s.VarType ' ' e.tail (e.name) = 
		(s.VarType (e.name) ()) <PatternLexer e.tail>;
	s.VarType '\t' e.tail (e.name) = 
		(s.VarType (e.name) ()) <PatternLexer e.tail>;
	s.VarType '\n' e.tail (e.name) = 
		(s.VarType (e.name) ()) <PatternLexer e.tail>;
	s.VarType (e.name) =  
		(s.VarType (e.name) ());
	
	s.VarType s.symbol e.tail (e.name) =  
		<ParseName 
			s.VarType e.tail (e.name s.symbol)
		>;
}

$ENTRY Parser {
	e.patterns = 
		<MakeBrackets
			<PatternLexer
				e.patterns
			>
		>;
}